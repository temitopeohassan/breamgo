{
  "address": "0x80558b41869E15cF7ee64bA199015D4F72EF0CeF",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "postId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "content",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "author",
          "type": "address"
        }
      ],
      "name": "BlogPostCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "orderId",
          "type": "uint256"
        }
      ],
      "name": "OrderCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "orderId",
          "type": "uint256"
        }
      ],
      "name": "OrderDisputed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "orderId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "productId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "OrderPlaced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "orderId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "OrderResolved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "productId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "ProductCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "requester",
          "type": "address"
        }
      ],
      "name": "RequestCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_content",
          "type": "string"
        }
      ],
      "name": "addBlogPost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "blogPosts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "content",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "author",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "buyerOrders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_orderId",
          "type": "uint256"
        }
      ],
      "name": "completeOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_image",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_minQuantity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "createProduct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_productName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_budget",
          "type": "uint256"
        }
      ],
      "name": "createRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_orderId",
          "type": "uint256"
        }
      ],
      "name": "disputeOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "productId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        },
        {
          "internalType": "enum Marketplace.OrderStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_productId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        }
      ],
      "name": "placeOrder",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "products",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "image",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "minQuantity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "requests",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "requester",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "productName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "budget",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_orderId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "refundBuyer",
          "type": "bool"
        }
      ],
      "name": "resolveDispute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sellerProducts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2e7661edcaef514a744b4f64a729d529e8b9e3da66893519180e9b93a1325dd3",
  "receipt": {
    "to": null,
    "from": "0x2b2542b313385AF7453623765383CE3cc5D3c9cF",
    "contractAddress": "0x80558b41869E15cF7ee64bA199015D4F72EF0CeF",
    "transactionIndex": 2,
    "gasUsed": "1773637",
    "logsBloom": "0x
    "blockHash": "0x675b956da2dc6a288a40e1e4746a4f54cb6c423a9514aaa6daaa60b604996a19",
    "transactionHash": "0x2e7661edcaef514a744b4f64a729d529e8b9e3da66893519180e9b93a1325dd3",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 11870814,
        "transactionHash": "0x2e7661edcaef514a744b4f64a729d529e8b9e3da66893519180e9b93a1325dd3",
        "address": "0x80558b41869E15cF7ee64bA199015D4F72EF0CeF",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000002b2542b313385af7453623765383ce3cc5d3c9cf"
        ],
        "data": "0x",
        "logIndex": 6,
        "blockHash": "0x675b956da2dc6a288a40e1e4746a4f54cb6c423a9514aaa6daaa60b604996a19"
      }
    ],
    "blockNumber": 11870814,
    "cumulativeGasUsed": "2048980",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "5ba3cbd647fba7ee54463d23c4848752",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"postId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"}],\"name\":\"BlogPostCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"OrderCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"OrderDisputed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"OrderPlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"OrderResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"ProductCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"}],\"name\":\"RequestCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_content\",\"type\":\"string\"}],\"name\":\"addBlogPost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"blogPosts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"buyerOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_orderId\",\"type\":\"uint256\"}],\"name\":\"completeOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_image\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_minQuantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"createProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_productName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_budget\",\"type\":\"uint256\"}],\"name\":\"createRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_orderId\",\"type\":\"uint256\"}],\"name\":\"disputeOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum Marketplace.OrderStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_productId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"placeOrder\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"products\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"minQuantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requests\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"productName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"budget\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_orderId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"refundBuyer\",\"type\":\"bool\"}],\"name\":\"resolveDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sellerProducts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace.sol\":\"Marketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Marketplace.sol\":{\"content\":\"\\n\\n\\n\\n\\n\\n\\n\\n\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract Marketplace is Ownable, ReentrancyGuard {\\n    uint256 private _productIdCounter;\\n    uint256 private _requestIdCounter;\\n    uint256 private _orderIdCounter;\\n    uint256 private _blogPostIdCounter;\\n\\n    enum OrderStatus { Pending, Completed, Cancelled, Dispute }\\n\\n    struct Product {\\n        uint256 id;\\n        address payable seller;\\n        string name;\\n        string image;\\n        string description;\\n        uint256 minQuantity;\\n        uint256 price; // price per unit\\n    }\\n\\n    struct Request {\\n        uint256 id;\\n        address requester;\\n        string productName;\\n        string description;\\n        uint256 quantity;\\n        uint256 budget;\\n    }\\n\\n    struct Order {\\n        uint256 id;\\n        uint256 productId;\\n        address buyer;\\n        uint256 quantity;\\n        uint256 totalAmount;\\n        OrderStatus status;\\n    }\\n\\n    struct BlogPost {\\n        uint256 id;\\n        string title;\\n        string content;\\n        address author;\\n    }\\n\\n    mapping(uint256 => Product) public products;\\n    mapping(uint256 => Request) public requests;\\n    mapping(uint256 => Order) public orders;\\n    mapping(address => uint256[]) public sellerProducts;\\n    mapping(address => uint256[]) public buyerOrders;\\n    mapping(uint256 => BlogPost) public blogPosts;\\n\\n    event ProductCreated(uint256 productId, address seller);\\n    event RequestCreated(uint256 requestId, address requester);\\n    event OrderPlaced(uint256 orderId, uint256 productId, address buyer);\\n    event OrderCompleted(uint256 orderId);\\n    event OrderDisputed(uint256 orderId);\\n    event OrderResolved(uint256 orderId, address recipient);\\n    event BlogPostCreated(uint256 postId, string title, string content, address author);\\n\\n    // Create a new product\\n    function createProduct(\\n        string memory _name,\\n        string memory _image,\\n        string memory _description,\\n        uint256 _minQuantity,\\n        uint256 _price\\n    ) public {\\n        uint256 productId = _productIdCounter++;\\n        products[productId] = Product({\\n            id: productId,\\n            seller: payable(msg.sender),\\n            name: _name,\\n            image: _image,\\n            description: _description,\\n            minQuantity: _minQuantity,\\n            price: _price\\n        });\\n\\n        sellerProducts[msg.sender].push(productId);\\n        emit ProductCreated(productId, msg.sender);\\n    }\\n\\n    // Create a new request for a product\\n    function createRequest(\\n        string memory _productName,\\n        string memory _description,\\n        uint256 _quantity,\\n        uint256 _budget\\n    ) public {\\n        uint256 requestId = _requestIdCounter++;\\n        requests[requestId] = Request({\\n            id: requestId,\\n            requester: msg.sender,\\n            productName: _productName,\\n            description: _description,\\n            quantity: _quantity,\\n            budget: _budget\\n        });\\n\\n        emit RequestCreated(requestId, msg.sender);\\n    }\\n\\n    // Place an order for a product\\n    function placeOrder(uint256 _productId, uint256 _quantity) public payable nonReentrant {\\n        Product memory product = products[_productId];\\n        require(_quantity >= product.minQuantity, \\\"Quantity less than minimum required\\\");\\n        uint256 totalAmount = product.price * _quantity;\\n        require(msg.value == totalAmount, \\\"Incorrect payment amount\\\");\\n\\n        uint256 orderId = _orderIdCounter++;\\n        orders[orderId] = Order({\\n            id: orderId,\\n            productId: _productId,\\n            buyer: msg.sender,\\n            quantity: _quantity,\\n            totalAmount: totalAmount,\\n            status: OrderStatus.Pending\\n        });\\n\\n        buyerOrders[msg.sender].push(orderId);\\n        emit OrderPlaced(orderId, _productId, msg.sender);\\n    }\\n\\n    // Complete an order (only the buyer can mark the order as completed)\\n    function completeOrder(uint256 _orderId) public nonReentrant {\\n        Order storage order = orders[_orderId];\\n        require(order.status == OrderStatus.Pending, \\\"Order already completed, cancelled, or in dispute\\\");\\n        require(msg.sender == order.buyer, \\\"Only the buyer can mark the order as completed\\\");\\n\\n        order.status = OrderStatus.Completed;\\n        Product memory product = products[order.productId];\\n        product.seller.transfer(order.totalAmount);\\n\\n        emit OrderCompleted(_orderId);\\n    }\\n\\n    // Mark an order as disputed\\n    function disputeOrder(uint256 _orderId) public {\\n        Order storage order = orders[_orderId];\\n        require(order.status == OrderStatus.Pending, \\\"Order already completed, cancelled, or in dispute\\\");\\n        require(msg.sender == order.buyer || msg.sender == products[order.productId].seller, \\\"Only the buyer or seller can dispute the order\\\");\\n\\n        order.status = OrderStatus.Dispute;\\n        emit OrderDisputed(_orderId);\\n    }\\n\\n    // Resolve a disputed order (only the contract owner can resolve disputes)\\n    function resolveDispute(uint256 _orderId, bool refundBuyer) public onlyOwner nonReentrant {\\n        Order storage order = orders[_orderId];\\n        require(order.status == OrderStatus.Dispute, \\\"Order not in dispute\\\");\\n\\n        order.status = OrderStatus.Cancelled; // Set status to Cancelled to prevent further actions\\n\\n        if (refundBuyer) {\\n            payable(order.buyer).transfer(order.totalAmount);\\n            emit OrderResolved(_orderId, order.buyer);\\n        } else {\\n            products[order.productId].seller.transfer(order.totalAmount);\\n            emit OrderResolved(_orderId, products[order.productId].seller);\\n        }\\n    }\\n\\n    // Add a blog post (only the contract owner can add posts)\\n    function addBlogPost(string memory _title, string memory _content) public onlyOwner {\\n        uint256 postId = _blogPostIdCounter++;\\n        blogPosts[postId] = BlogPost({\\n            id: postId,\\n            title: _title,\\n            content: _content,\\n            author: msg.sender\\n        });\\n\\n        emit BlogPostCreated(postId, _title, _content, msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0x252a6f9c93b71de84d4fed7d012b48b13d6d8a19fcfe3ceb460fda1fa4322aae\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a33610023565b60018055610073565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611e41806100826000396000f3fe6080604052600436106100f35760003560e01c80638da5cb5b1161008a578063b04299c511610059578063b04299c5146102f1578063b6adaaff14610321578063c1302b3414610341578063f2fde38b1461036157600080fd5b80638da5cb5b1461021a578063a09970b214610242578063a274b86314610262578063a85c38ef1461028257600080fd5b8063715018a6116100c6578063715018a61461018d5780637acc0b20146101a257806381d12c58146101d5578063843f61e21461020757600080fd5b80631a481ecf146100f857806334b25ee21461011a57806338ea96241461013a5780634500cb601461015a575b600080fd5b34801561010457600080fd5b50610118610113366004611827565b610381565b005b34801561012657600080fd5b506101186101353660046118c1565b6104be565b34801561014657600080fd5b506101186101553660046118f6565b6106a3565b34801561016657600080fd5b5061017a610175366004611986565b61079d565b6040519081526020015b60405180910390f35b34801561019957600080fd5b506101186107ce565b3480156101ae57600080fd5b506101c26101bd3660046119b0565b6107e2565b6040516101849796959493929190611a0f565b3480156101e157600080fd5b506101f56101f03660046119b0565b6109bf565b60405161018496959493929190611a76565b610118610215366004611ac8565b610b0e565b34801561022657600080fd5b506000546040516001600160a01b039091168152602001610184565b34801561024e57600080fd5b5061011861025d3660046119b0565b610f45565b34801561026e57600080fd5b5061011861027d366004611aea565b61106b565b34801561028e57600080fd5b506102df61029d3660046119b0565b600860205260009081526040902080546001820154600283015460038401546004850154600590950154939492936001600160a01b0390921692909160ff1686565b60405161018496959493929190611b64565b3480156102fd57600080fd5b5061031161030c3660046119b0565b611151565b6040516101849493929190611bbe565b34801561032d57600080fd5b5061011861033c3660046119b0565b611293565b34801561034d57600080fd5b5061017a61035c366004611986565b6115ef565b34801561036d57600080fd5b5061011861037c366004611c03565b61160b565b600280546000918261039283611c3b565b909155506040805160e0810182528281523360208083019182528284018b8152606084018b9052608084018a905260a0840189905260c08401889052600086815260069092529390208251815590516001820180546001600160a01b0319166001600160a01b0390921691909117905591519293509160028201906104179082611cdd565b506060820151600382019061042c9082611cdd565b50608082015160048201906104419082611cdd565b5060a0820151600582015560c0909101516006909101553360008181526009602090815260408083208054600181018255908452928290209092018490558151848152908101929092527fe8bb4e90e950f7b76a8c4e472b3b5e01d41c478f9eeaea36b4ba991f51133f91910160405180910390a1505050505050565b6104c6611681565b6104ce6116db565b60008281526008602052604090206003600582015460ff1660038111156104f7576104f7611b4e565b146105405760405162461bcd60e51b81526020600482015260146024820152734f72646572206e6f7420696e206469737075746560601b60448201526064015b60405180910390fd5b60058101805460ff1916600217905581156105e257600281015460048201546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610595573d6000803e3d6000fd5b506002810154604080518581526001600160a01b0390921660208301527f6677b0f64e2766187095e899607736e927bf9a48c4f30c15d65f9e9e3932208e910160405180910390a1610695565b60018082015460009081526006602052604080822090920154600484015492516001600160a01b039091169280156108fc0292909190818181858888f19350505050158015610635573d6000803e3d6000fd5b506001818101546000908152600660209081526040918290209092015481518681526001600160a01b03909116928101929092527f6677b0f64e2766187095e899607736e927bf9a48c4f30c15d65f9e9e3932208e910160405180910390a15b5061069f60018055565b5050565b60038054600091826106b483611c3b565b909155506040805160c0810182528281523360208083019182528284018a8152606084018a90526080840189905260a08401889052600086815260079092529390208251815590516001820180546001600160a01b0319166001600160a01b0390921691909117905591519293509160028201906107329082611cdd565b50606082015160038201906107479082611cdd565b506080820151600482015560a090910151600590910155604080518281523360208201527f233bb55fd57b21b8a3d15c9ad8fbbab435fe4cf2865cc654f6a57d9d4d8cda54910160405180910390a15050505050565b600a60205281600052604060002081815481106107b957600080fd5b90600052602060002001600091509150505481565b6107d6611681565b6107e06000611734565b565b60066020526000908152604090208054600182015460028301805492936001600160a01b039092169261081490611c54565b80601f016020809104026020016040519081016040528092919081815260200182805461084090611c54565b801561088d5780601f106108625761010080835404028352916020019161088d565b820191906000526020600020905b81548152906001019060200180831161087057829003601f168201915b5050505050908060030180546108a290611c54565b80601f01602080910402602001604051908101604052809291908181526020018280546108ce90611c54565b801561091b5780601f106108f05761010080835404028352916020019161091b565b820191906000526020600020905b8154815290600101906020018083116108fe57829003601f168201915b50505050509080600401805461093090611c54565b80601f016020809104026020016040519081016040528092919081815260200182805461095c90611c54565b80156109a95780601f1061097e576101008083540402835291602001916109a9565b820191906000526020600020905b81548152906001019060200180831161098c57829003601f168201915b5050505050908060050154908060060154905087565b60076020526000908152604090208054600182015460028301805492936001600160a01b03909216926109f190611c54565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1d90611c54565b8015610a6a5780601f10610a3f57610100808354040283529160200191610a6a565b820191906000526020600020905b815481529060010190602001808311610a4d57829003601f168201915b505050505090806003018054610a7f90611c54565b80601f0160208091040260200160405190810160405280929190818152602001828054610aab90611c54565b8015610af85780601f10610acd57610100808354040283529160200191610af8565b820191906000526020600020905b815481529060010190602001808311610adb57829003601f168201915b5050505050908060040154908060050154905086565b610b166116db565b6000828152600660209081526040808320815160e0810183528154815260018201546001600160a01b0316938101939093526002810180549192840191610b5c90611c54565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8890611c54565b8015610bd55780601f10610baa57610100808354040283529160200191610bd5565b820191906000526020600020905b815481529060010190602001808311610bb857829003601f168201915b50505050508152602001600382018054610bee90611c54565b80601f0160208091040260200160405190810160405280929190818152602001828054610c1a90611c54565b8015610c675780601f10610c3c57610100808354040283529160200191610c67565b820191906000526020600020905b815481529060010190602001808311610c4a57829003601f168201915b50505050508152602001600482018054610c8090611c54565b80601f0160208091040260200160405190810160405280929190818152602001828054610cac90611c54565b8015610cf95780601f10610cce57610100808354040283529160200191610cf9565b820191906000526020600020905b815481529060010190602001808311610cdc57829003601f168201915b505050505081526020016005820154815260200160068201548152505090508060a00151821015610d785760405162461bcd60e51b815260206004820152602360248201527f5175616e74697479206c657373207468616e206d696e696d756d2072657175696044820152621c995960ea1b6064820152608401610537565b6000828260c00151610d8a9190611d9d565b9050803414610ddb5760405162461bcd60e51b815260206004820152601860248201527f496e636f7272656374207061796d656e7420616d6f756e7400000000000000006044820152606401610537565b6004805460009182610dec83611c3b565b9190505590506040518060c00160405280828152602001868152602001336001600160a01b0316815260200185815260200183815260200160006003811115610e3757610e37611b4e565b81525060086000838152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690836003811115610ecc57610ecc611b4e565b021790555050336000818152600a602090815260408083208054600181018255908452928290209092018590558151858152908101899052908101919091527ff4ae361d67df8ff151337122b70e54414e64545e71dd154d79408677451fd874915060600160405180910390a150505061069f60018055565b600081815260086020526040812090600582015460ff166003811115610f6d57610f6d611b4e565b14610f8a5760405162461bcd60e51b815260040161053790611dba565b60028101546001600160a01b0316331480610fc25750600181810154600090815260066020526040902001546001600160a01b031633145b6110255760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c7920746865206275796572206f722073656c6c65722063616e2064697360448201526d383aba32903a34329037b93232b960911b6064820152608401610537565b60058101805460ff191660031790556040518281527fcc71d13ec179647ba6991025098e2d3f0dc223962c4052028bfb067e394e22b09060200160405180910390a15050565b611073611681565b600580546000918261108483611c3b565b909155506040805160808101825282815260208082018781528284018790523360608401526000858152600b9092529290208151815591519293509160018201906110cf9082611cdd565b50604082015160028201906110e49082611cdd565b5060609190910151600390910180546001600160a01b0319166001600160a01b039092169190911790556040517f9466d899c3948bbd064cfb4ddaccf021352f65d4fae787e0e02bca1bdc2dde4d90611144908390869086903390611bbe565b60405180910390a1505050565b600b602052600090815260409020805460018201805491929161117390611c54565b80601f016020809104026020016040519081016040528092919081815260200182805461119f90611c54565b80156111ec5780601f106111c1576101008083540402835291602001916111ec565b820191906000526020600020905b8154815290600101906020018083116111cf57829003601f168201915b50505050509080600201805461120190611c54565b80601f016020809104026020016040519081016040528092919081815260200182805461122d90611c54565b801561127a5780601f1061124f5761010080835404028352916020019161127a565b820191906000526020600020905b81548152906001019060200180831161125d57829003601f168201915b505050600390930154919250506001600160a01b031684565b61129b6116db565b600081815260086020526040812090600582015460ff1660038111156112c3576112c3611b4e565b146112e05760405162461bcd60e51b815260040161053790611dba565b60028101546001600160a01b031633146113535760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c79207468652062757965722063616e206d61726b20746865206f72646560448201526d1c88185cc818dbdb5c1b195d195960921b6064820152608401610537565b60058101805460ff19166001908117909155808201546000908152600660209081526040808320815160e08101835281548152948101546001600160a01b031692850192909252600282018054939493918401916113b090611c54565b80601f01602080910402602001604051908101604052809291908181526020018280546113dc90611c54565b80156114295780601f106113fe57610100808354040283529160200191611429565b820191906000526020600020905b81548152906001019060200180831161140c57829003601f168201915b5050505050815260200160038201805461144290611c54565b80601f016020809104026020016040519081016040528092919081815260200182805461146e90611c54565b80156114bb5780601f10611490576101008083540402835291602001916114bb565b820191906000526020600020905b81548152906001019060200180831161149e57829003601f168201915b505050505081526020016004820180546114d490611c54565b80601f016020809104026020016040519081016040528092919081815260200182805461150090611c54565b801561154d5780601f106115225761010080835404028352916020019161154d565b820191906000526020600020905b81548152906001019060200180831161153057829003601f168201915b5050505050815260200160058201548152602001600682015481525050905080602001516001600160a01b03166108fc83600401549081150290604051600060405180830381858888f193505050501580156115ad573d6000803e3d6000fd5b506040518381527f02a7d4d9472af7118644884b9a0ee443540c0027e938dd0aa35be8ecbe946c0a9060200160405180910390a150506115ec60018055565b50565b600960205281600052604060002081815481106107b957600080fd5b611613611681565b6001600160a01b0381166116785760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610537565b6115ec81611734565b6000546001600160a01b031633146107e05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610537565b60026001540361172d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610537565b6002600155565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126117ab57600080fd5b813567ffffffffffffffff808211156117c6576117c6611784565b604051601f8301601f19908116603f011681019082821181831017156117ee576117ee611784565b8160405283815286602085880101111561180757600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a0868803121561183f57600080fd5b853567ffffffffffffffff8082111561185757600080fd5b61186389838a0161179a565b9650602088013591508082111561187957600080fd5b61188589838a0161179a565b9550604088013591508082111561189b57600080fd5b506118a88882890161179a565b9598949750949560608101359550608001359392505050565b600080604083850312156118d457600080fd5b82359150602083013580151581146118eb57600080fd5b809150509250929050565b6000806000806080858703121561190c57600080fd5b843567ffffffffffffffff8082111561192457600080fd5b6119308883890161179a565b9550602087013591508082111561194657600080fd5b506119538782880161179a565b949794965050505060408301359260600135919050565b80356001600160a01b038116811461198157600080fd5b919050565b6000806040838503121561199957600080fd5b6119a28361196a565b946020939093013593505050565b6000602082840312156119c257600080fd5b5035919050565b6000815180845260005b818110156119ef576020818501810151868301820152016119d3565b506000602082860101526020601f19601f83011685010191505092915050565b8781526001600160a01b038716602082015260e060408201819052600090611a39908301886119c9565b8281036060840152611a4b81886119c9565b90508281036080840152611a5f81876119c9565b60a0840195909552505060c0015295945050505050565b8681526001600160a01b038616602082015260c060408201819052600090611aa0908301876119c9565b8281036060840152611ab281876119c9565b6080840195909552505060a00152949350505050565b60008060408385031215611adb57600080fd5b50508035926020909101359150565b60008060408385031215611afd57600080fd5b823567ffffffffffffffff80821115611b1557600080fd5b611b218683870161179a565b93506020850135915080821115611b3757600080fd5b50611b448582860161179a565b9150509250929050565b634e487b7160e01b600052602160045260246000fd5b868152602081018690526001600160a01b0385166040820152606081018490526080810183905260c0810160048310611bad57634e487b7160e01b600052602160045260246000fd5b8260a0830152979650505050505050565b848152608060208201526000611bd760808301866119c9565b8281036040840152611be981866119c9565b91505060018060a01b038316606083015295945050505050565b600060208284031215611c1557600080fd5b611c1e8261196a565b9392505050565b634e487b7160e01b600052601160045260246000fd5b600060018201611c4d57611c4d611c25565b5060010190565b600181811c90821680611c6857607f821691505b602082108103611c8857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115611cd857600081815260208120601f850160051c81016020861015611cb55750805b601f850160051c820191505b81811015611cd457828155600101611cc1565b5050505b505050565b815167ffffffffffffffff811115611cf757611cf7611784565b611d0b81611d058454611c54565b84611c8e565b602080601f831160018114611d405760008415611d285750858301515b600019600386901b1c1916600185901b178555611cd4565b600085815260208120601f198616915b82811015611d6f57888601518255948401946001909101908401611d50565b5085821015611d8d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8082028115828204841417611db457611db4611c25565b92915050565b60208082526031908201527f4f7264657220616c726561647920636f6d706c657465642c2063616e63656c6c60408201527065642c206f7220696e206469737075746560781b60608201526080019056fea26469706673582212200c1fb752516e2582f8fb26579f5b35c19ca2a920a70964fd6bbdef507ce1f0cd64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100f35760003560e01c80638da5cb5b1161008a578063b04299c511610059578063b04299c5146102f1578063b6adaaff14610321578063c1302b3414610341578063f2fde38b1461036157600080fd5b80638da5cb5b1461021a578063a09970b214610242578063a274b86314610262578063a85c38ef1461028257600080fd5b8063715018a6116100c6578063715018a61461018d5780637acc0b20146101a257806381d12c58146101d5578063843f61e21461020757600080fd5b80631a481ecf146100f857806334b25ee21461011a57806338ea96241461013a5780634500cb601461015a575b600080fd5b34801561010457600080fd5b50610118610113366004611827565b610381565b005b34801561012657600080fd5b506101186101353660046118c1565b6104be565b34801561014657600080fd5b506101186101553660046118f6565b6106a3565b34801561016657600080fd5b5061017a610175366004611986565b61079d565b6040519081526020015b60405180910390f35b34801561019957600080fd5b506101186107ce565b3480156101ae57600080fd5b506101c26101bd3660046119b0565b6107e2565b6040516101849796959493929190611a0f565b3480156101e157600080fd5b506101f56101f03660046119b0565b6109bf565b60405161018496959493929190611a76565b610118610215366004611ac8565b610b0e565b34801561022657600080fd5b506000546040516001600160a01b039091168152602001610184565b34801561024e57600080fd5b5061011861025d3660046119b0565b610f45565b34801561026e57600080fd5b5061011861027d366004611aea565b61106b565b34801561028e57600080fd5b506102df61029d3660046119b0565b600860205260009081526040902080546001820154600283015460038401546004850154600590950154939492936001600160a01b0390921692909160ff1686565b60405161018496959493929190611b64565b3480156102fd57600080fd5b5061031161030c3660046119b0565b611151565b6040516101849493929190611bbe565b34801561032d57600080fd5b5061011861033c3660046119b0565b611293565b34801561034d57600080fd5b5061017a61035c366004611986565b6115ef565b34801561036d57600080fd5b5061011861037c366004611c03565b61160b565b600280546000918261039283611c3b565b909155506040805160e0810182528281523360208083019182528284018b8152606084018b9052608084018a905260a0840189905260c08401889052600086815260069092529390208251815590516001820180546001600160a01b0319166001600160a01b0390921691909117905591519293509160028201906104179082611cdd565b506060820151600382019061042c9082611cdd565b50608082015160048201906104419082611cdd565b5060a0820151600582015560c0909101516006909101553360008181526009602090815260408083208054600181018255908452928290209092018490558151848152908101929092527fe8bb4e90e950f7b76a8c4e472b3b5e01d41c478f9eeaea36b4ba991f51133f91910160405180910390a1505050505050565b6104c6611681565b6104ce6116db565b60008281526008602052604090206003600582015460ff1660038111156104f7576104f7611b4e565b146105405760405162461bcd60e51b81526020600482015260146024820152734f72646572206e6f7420696e206469737075746560601b60448201526064015b60405180910390fd5b60058101805460ff1916600217905581156105e257600281015460048201546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610595573d6000803e3d6000fd5b506002810154604080518581526001600160a01b0390921660208301527f6677b0f64e2766187095e899607736e927bf9a48c4f30c15d65f9e9e3932208e910160405180910390a1610695565b60018082015460009081526006602052604080822090920154600484015492516001600160a01b039091169280156108fc0292909190818181858888f19350505050158015610635573d6000803e3d6000fd5b506001818101546000908152600660209081526040918290209092015481518681526001600160a01b03909116928101929092527f6677b0f64e2766187095e899607736e927bf9a48c4f30c15d65f9e9e3932208e910160405180910390a15b5061069f60018055565b5050565b60038054600091826106b483611c3b565b909155506040805160c0810182528281523360208083019182528284018a8152606084018a90526080840189905260a08401889052600086815260079092529390208251815590516001820180546001600160a01b0319166001600160a01b0390921691909117905591519293509160028201906107329082611cdd565b50606082015160038201906107479082611cdd565b506080820151600482015560a090910151600590910155604080518281523360208201527f233bb55fd57b21b8a3d15c9ad8fbbab435fe4cf2865cc654f6a57d9d4d8cda54910160405180910390a15050505050565b600a60205281600052604060002081815481106107b957600080fd5b90600052602060002001600091509150505481565b6107d6611681565b6107e06000611734565b565b60066020526000908152604090208054600182015460028301805492936001600160a01b039092169261081490611c54565b80601f016020809104026020016040519081016040528092919081815260200182805461084090611c54565b801561088d5780601f106108625761010080835404028352916020019161088d565b820191906000526020600020905b81548152906001019060200180831161087057829003601f168201915b5050505050908060030180546108a290611c54565b80601f01602080910402602001604051908101604052809291908181526020018280546108ce90611c54565b801561091b5780601f106108f05761010080835404028352916020019161091b565b820191906000526020600020905b8154815290600101906020018083116108fe57829003601f168201915b50505050509080600401805461093090611c54565b80601f016020809104026020016040519081016040528092919081815260200182805461095c90611c54565b80156109a95780601f1061097e576101008083540402835291602001916109a9565b820191906000526020600020905b81548152906001019060200180831161098c57829003601f168201915b5050505050908060050154908060060154905087565b60076020526000908152604090208054600182015460028301805492936001600160a01b03909216926109f190611c54565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1d90611c54565b8015610a6a5780601f10610a3f57610100808354040283529160200191610a6a565b820191906000526020600020905b815481529060010190602001808311610a4d57829003601f168201915b505050505090806003018054610a7f90611c54565b80601f0160208091040260200160405190810160405280929190818152602001828054610aab90611c54565b8015610af85780601f10610acd57610100808354040283529160200191610af8565b820191906000526020600020905b815481529060010190602001808311610adb57829003601f168201915b5050505050908060040154908060050154905086565b610b166116db565b6000828152600660209081526040808320815160e0810183528154815260018201546001600160a01b0316938101939093526002810180549192840191610b5c90611c54565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8890611c54565b8015610bd55780601f10610baa57610100808354040283529160200191610bd5565b820191906000526020600020905b815481529060010190602001808311610bb857829003601f168201915b50505050508152602001600382018054610bee90611c54565b80601f0160208091040260200160405190810160405280929190818152602001828054610c1a90611c54565b8015610c675780601f10610c3c57610100808354040283529160200191610c67565b820191906000526020600020905b815481529060010190602001808311610c4a57829003601f168201915b50505050508152602001600482018054610c8090611c54565b80601f0160208091040260200160405190810160405280929190818152602001828054610cac90611c54565b8015610cf95780601f10610cce57610100808354040283529160200191610cf9565b820191906000526020600020905b815481529060010190602001808311610cdc57829003601f168201915b505050505081526020016005820154815260200160068201548152505090508060a00151821015610d785760405162461bcd60e51b815260206004820152602360248201527f5175616e74697479206c657373207468616e206d696e696d756d2072657175696044820152621c995960ea1b6064820152608401610537565b6000828260c00151610d8a9190611d9d565b9050803414610ddb5760405162461bcd60e51b815260206004820152601860248201527f496e636f7272656374207061796d656e7420616d6f756e7400000000000000006044820152606401610537565b6004805460009182610dec83611c3b565b9190505590506040518060c00160405280828152602001868152602001336001600160a01b0316815260200185815260200183815260200160006003811115610e3757610e37611b4e565b81525060086000838152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690836003811115610ecc57610ecc611b4e565b021790555050336000818152600a602090815260408083208054600181018255908452928290209092018590558151858152908101899052908101919091527ff4ae361d67df8ff151337122b70e54414e64545e71dd154d79408677451fd874915060600160405180910390a150505061069f60018055565b600081815260086020526040812090600582015460ff166003811115610f6d57610f6d611b4e565b14610f8a5760405162461bcd60e51b815260040161053790611dba565b60028101546001600160a01b0316331480610fc25750600181810154600090815260066020526040902001546001600160a01b031633145b6110255760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c7920746865206275796572206f722073656c6c65722063616e2064697360448201526d383aba32903a34329037b93232b960911b6064820152608401610537565b60058101805460ff191660031790556040518281527fcc71d13ec179647ba6991025098e2d3f0dc223962c4052028bfb067e394e22b09060200160405180910390a15050565b611073611681565b600580546000918261108483611c3b565b909155506040805160808101825282815260208082018781528284018790523360608401526000858152600b9092529290208151815591519293509160018201906110cf9082611cdd565b50604082015160028201906110e49082611cdd565b5060609190910151600390910180546001600160a01b0319166001600160a01b039092169190911790556040517f9466d899c3948bbd064cfb4ddaccf021352f65d4fae787e0e02bca1bdc2dde4d90611144908390869086903390611bbe565b60405180910390a1505050565b600b602052600090815260409020805460018201805491929161117390611c54565b80601f016020809104026020016040519081016040528092919081815260200182805461119f90611c54565b80156111ec5780601f106111c1576101008083540402835291602001916111ec565b820191906000526020600020905b8154815290600101906020018083116111cf57829003601f168201915b50505050509080600201805461120190611c54565b80601f016020809104026020016040519081016040528092919081815260200182805461122d90611c54565b801561127a5780601f1061124f5761010080835404028352916020019161127a565b820191906000526020600020905b81548152906001019060200180831161125d57829003601f168201915b505050600390930154919250506001600160a01b031684565b61129b6116db565b600081815260086020526040812090600582015460ff1660038111156112c3576112c3611b4e565b146112e05760405162461bcd60e51b815260040161053790611dba565b60028101546001600160a01b031633146113535760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c79207468652062757965722063616e206d61726b20746865206f72646560448201526d1c88185cc818dbdb5c1b195d195960921b6064820152608401610537565b60058101805460ff19166001908117909155808201546000908152600660209081526040808320815160e08101835281548152948101546001600160a01b031692850192909252600282018054939493918401916113b090611c54565b80601f01602080910402602001604051908101604052809291908181526020018280546113dc90611c54565b80156114295780601f106113fe57610100808354040283529160200191611429565b820191906000526020600020905b81548152906001019060200180831161140c57829003601f168201915b5050505050815260200160038201805461144290611c54565b80601f016020809104026020016040519081016040528092919081815260200182805461146e90611c54565b80156114bb5780601f10611490576101008083540402835291602001916114bb565b820191906000526020600020905b81548152906001019060200180831161149e57829003601f168201915b505050505081526020016004820180546114d490611c54565b80601f016020809104026020016040519081016040528092919081815260200182805461150090611c54565b801561154d5780601f106115225761010080835404028352916020019161154d565b820191906000526020600020905b81548152906001019060200180831161153057829003601f168201915b5050505050815260200160058201548152602001600682015481525050905080602001516001600160a01b03166108fc83600401549081150290604051600060405180830381858888f193505050501580156115ad573d6000803e3d6000fd5b506040518381527f02a7d4d9472af7118644884b9a0ee443540c0027e938dd0aa35be8ecbe946c0a9060200160405180910390a150506115ec60018055565b50565b600960205281600052604060002081815481106107b957600080fd5b611613611681565b6001600160a01b0381166116785760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610537565b6115ec81611734565b6000546001600160a01b031633146107e05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610537565b60026001540361172d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610537565b6002600155565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126117ab57600080fd5b813567ffffffffffffffff808211156117c6576117c6611784565b604051601f8301601f19908116603f011681019082821181831017156117ee576117ee611784565b8160405283815286602085880101111561180757600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a0868803121561183f57600080fd5b853567ffffffffffffffff8082111561185757600080fd5b61186389838a0161179a565b9650602088013591508082111561187957600080fd5b61188589838a0161179a565b9550604088013591508082111561189b57600080fd5b506118a88882890161179a565b9598949750949560608101359550608001359392505050565b600080604083850312156118d457600080fd5b82359150602083013580151581146118eb57600080fd5b809150509250929050565b6000806000806080858703121561190c57600080fd5b843567ffffffffffffffff8082111561192457600080fd5b6119308883890161179a565b9550602087013591508082111561194657600080fd5b506119538782880161179a565b949794965050505060408301359260600135919050565b80356001600160a01b038116811461198157600080fd5b919050565b6000806040838503121561199957600080fd5b6119a28361196a565b946020939093013593505050565b6000602082840312156119c257600080fd5b5035919050565b6000815180845260005b818110156119ef576020818501810151868301820152016119d3565b506000602082860101526020601f19601f83011685010191505092915050565b8781526001600160a01b038716602082015260e060408201819052600090611a39908301886119c9565b8281036060840152611a4b81886119c9565b90508281036080840152611a5f81876119c9565b60a0840195909552505060c0015295945050505050565b8681526001600160a01b038616602082015260c060408201819052600090611aa0908301876119c9565b8281036060840152611ab281876119c9565b6080840195909552505060a00152949350505050565b60008060408385031215611adb57600080fd5b50508035926020909101359150565b60008060408385031215611afd57600080fd5b823567ffffffffffffffff80821115611b1557600080fd5b611b218683870161179a565b93506020850135915080821115611b3757600080fd5b50611b448582860161179a565b9150509250929050565b634e487b7160e01b600052602160045260246000fd5b868152602081018690526001600160a01b0385166040820152606081018490526080810183905260c0810160048310611bad57634e487b7160e01b600052602160045260246000fd5b8260a0830152979650505050505050565b848152608060208201526000611bd760808301866119c9565b8281036040840152611be981866119c9565b91505060018060a01b038316606083015295945050505050565b600060208284031215611c1557600080fd5b611c1e8261196a565b9392505050565b634e487b7160e01b600052601160045260246000fd5b600060018201611c4d57611c4d611c25565b5060010190565b600181811c90821680611c6857607f821691505b602082108103611c8857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115611cd857600081815260208120601f850160051c81016020861015611cb55750805b601f850160051c820191505b81811015611cd457828155600101611cc1565b5050505b505050565b815167ffffffffffffffff811115611cf757611cf7611784565b611d0b81611d058454611c54565b84611c8e565b602080601f831160018114611d405760008415611d285750858301515b600019600386901b1c1916600185901b178555611cd4565b600085815260208120601f198616915b82811015611d6f57888601518255948401946001909101908401611d50565b5085821015611d8d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8082028115828204841417611db457611db4611c25565b92915050565b60208082526031908201527f4f7264657220616c726561647920636f6d706c657465642c2063616e63656c6c60408201527065642c206f7220696e206469737075746560781b60608201526080019056fea26469706673582212200c1fb752516e2582f8fb26579f5b35c19ca2a920a70964fd6bbdef507ce1f0cd64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 123,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 288,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "_productIdCounter",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 290,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "_requestIdCounter",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 292,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "_orderIdCounter",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 294,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "_blogPostIdCounter",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 355,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "products",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_struct(Product)314_storage)"
      },
      {
        "astId": 360,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "requests",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_struct(Request)327_storage)"
      },
      {
        "astId": 365,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "orders",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_uint256,t_struct(Order)341_storage)"
      },
      {
        "astId": 370,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "sellerProducts",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 375,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "buyerOrders",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 380,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "blogPosts",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint256,t_struct(BlogPost)350_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_enum(OrderStatus)299": {
        "encoding": "inplace",
        "label": "enum Marketplace.OrderStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_uint256,t_struct(BlogPost)350_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Marketplace.BlogPost)",
        "numberOfBytes": "32",
        "value": "t_struct(BlogPost)350_storage"
      },
      "t_mapping(t_uint256,t_struct(Order)341_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Marketplace.Order)",
        "numberOfBytes": "32",
        "value": "t_struct(Order)341_storage"
      },
      "t_mapping(t_uint256,t_struct(Product)314_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Marketplace.Product)",
        "numberOfBytes": "32",
        "value": "t_struct(Product)314_storage"
      },
      "t_mapping(t_uint256,t_struct(Request)327_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Marketplace.Request)",
        "numberOfBytes": "32",
        "value": "t_struct(Request)327_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(BlogPost)350_storage": {
        "encoding": "inplace",
        "label": "struct Marketplace.BlogPost",
        "members": [
          {
            "astId": 343,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 345,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "title",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 347,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "content",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 349,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "author",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Order)341_storage": {
        "encoding": "inplace",
        "label": "struct Marketplace.Order",
        "members": [
          {
            "astId": 329,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 331,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "productId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 333,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "buyer",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 335,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "quantity",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 337,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "totalAmount",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 340,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "status",
            "offset": 0,
            "slot": "5",
            "type": "t_enum(OrderStatus)299"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Product)314_storage": {
        "encoding": "inplace",
        "label": "struct Marketplace.Product",
        "members": [
          {
            "astId": 301,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 303,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "seller",
            "offset": 0,
            "slot": "1",
            "type": "t_address_payable"
          },
          {
            "astId": 305,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "name",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 307,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "image",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 309,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "description",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 311,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "minQuantity",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 313,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "price",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(Request)327_storage": {
        "encoding": "inplace",
        "label": "struct Marketplace.Request",
        "members": [
          {
            "astId": 316,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 318,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "requester",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 320,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "productName",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 322,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "description",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 324,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "quantity",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 326,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "budget",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}